{"version":3,"sources":["services/images-api.js","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGallery/GalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["defaultParams","currentPage","searchQuery","method","per_page","baseURL","params","API_KEY","fetchImages","a","axios","get","then","response","data","hits","Container","children","Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","onChange","currentTarget","value","autoComplete","placeholder","GalleryItem","id","webformatURL","largeImageURL","tags","handleLargeURLImage","handleClick","target","nodeName","dataset","large","onClick","src","alt","defaultProps","ImageGallery","images","console","log","largeURLImage","map","user","tag","Button","modalRoot","document","querySelector","Modal","onClose","createPortal","width","Loader","color","height","App","setImages","setSearchQuery","setLargeImageURL","isLoading","setIsLoading","error","setError","showModal","setShowModal","setCurrentPage","useEffect","options","imagesApi","prevPage","catch","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","trim","alert","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.119b5002.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst defaultParams = {\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    method: \"get\",\r\n    per_page: 12,\r\n    baseURL: \"https://pixabay.com/api/\",\r\n    params: \"&image_type=photo\",\r\n    API_KEY: \"23250998-48dbeb0708fc3f5b568666898\",\r\n  };\r\n\r\nconst fetchImages = async ({ currentPage, searchQuery }) => {\r\n  const { API_KEY, params } = defaultParams;\r\n  return await axios\r\n    .get(\r\n      `?key=${API_KEY}&q=${searchQuery}&${params}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      defaultParams\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };","import React from 'react';\r\n\r\nconst Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n\r\n    setQuery(\"\");\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={handleChange}\r\n          className=\"SearchForm-input\"\r\n          value={query}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst GalleryItem = ({\r\n  id,\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  handleLargeURLImage,\r\n}) => {\r\n  // const [largeImg, setLargeImg] = useState(\"\");\r\n  const handleClick = (e) => {\r\n    if (e.target.nodeName === \"IMG\") {\r\n      // setLargeImg(e.target.dataset.large);\r\n      handleLargeURLImage(e.target.dataset.large);\r\n    }\r\n  };\r\n  return (\r\n    <li className=\"GalleryItem\" key={webformatURL} onClick={handleClick}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"GalleryItem-image\"\r\n        onClick={handleClick}\r\n        data-large={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  handleLargeURLImage: PropTypes.string,\r\n};\r\n\r\nGalleryItem.defaultProps = {\r\n  id: \"\",\r\n  webformatURL: \"\",\r\n  largeImageURL: \"\",\r\n  tags: \"\",\r\n  handleLargeURLImage: \"\",\r\n};\r\n\r\nexport default GalleryItem;","import React from \"react\";\r\nimport GalleryItem from \"./GalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ images, handleLargeURLImage }) => {\r\n  const handleClick = (e) => {\r\n    console.log(\"gallery click\");\r\n  };\r\n  const largeURLImage = (data) => {\r\n    handleLargeURLImage(data);\r\n  };\r\n  return (\r\n    <ul className=\"ImageGallery\" id=\"imagesList\">\r\n      {images.map(({ id, webformatURL, largeImageURL, tags, user }) => (\r\n        <GalleryItem\r\n          onClick={handleClick}\r\n          key={`${id}${user}`}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tag={tags}\r\n          handleLargeURLImage={largeURLImage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n      <button className=\"ButtonWrapper\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal\");\r\n\r\nconst Modal = ({ largeImageURL, onClose, children }) => {\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        {children}\r\n        <img src={largeImageURL} alt=\"No available\" width=\"640\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;","/* eslint-disable react/no-unused-state */\r\nimport React, { useState } from \"react\";\r\nimport ThreeDots from \"react-loader-spinner\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n      <div className=\"LoaderWrapper\">\r\n        <ThreeDots type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Loader;","/* eslint-disable react/no-unused-state */\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport imagesApi from \"./services/images-api\";\nimport Container from \"./components/Container/Container\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport Loader from \"./components/Loader/Loader\";\n\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onChangeQuery = (query) => {\n    if (query.trim() === \"\") {\n      alert(\"Please write something\");\n      return;\n    }\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  const scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    setError(error);\n  }, [error]);\n  useEffect(() => {\n    if (searchQuery !== \"\") fetchImages();\n  }, [searchQuery]);\n\n  const fetchImages = () => {\n    setIsLoading(true);\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    imagesApi\n      .fetchImages(options)\n      .then((data) => {\n        setImages([...images, ...data]);\n        setCurrentPage((prevPage) => prevPage + 1);\n        setError(\"\");\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {\n        setIsLoading(false);\n        scrollTo();\n      });\n  };\n  const toggleModal = () => setShowModal(!showModal);\n\n  const handleLargeURLImage = (data) => {\n    setLargeImageURL(data);\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        {showModal && (\n          <Modal onClose={toggleModal} largeImageURL={largeImageURL} />\n        )}\n        <Searchbar onSubmit={onChangeQuery} />\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            handleLargeURLImage={handleLargeURLImage}\n          />\n        )}\n        {isLoading ? (\n          <Loader error={error} />\n        ) : (\n          images.length > 0 && <Button onClick={fetchImages} />\n        )}\n      </Container>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}